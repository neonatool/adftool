_realname=adftool
pkgbase=mingw-w64-${_realname}
pkgname=("${MINGW_PACKAGE_PREFIX}-${_realname}")
pkgver=0.5.1
pkgrel=1
pkgdesc="Adftool (mingw-w64)"
arch=('any')
mingw_arch=('mingw32' 'mingw64' 'ucrt64' 'clang64' 'clang32')
url='https://plmlab.math.cnrs.fr/neonatool/adftool'
license=('LICENSE')
depends=("${MINGW_PACKAGE_PREFIX}-hdf5"
	 "${MINGW_PACKAGE_PREFIX}-gmp"
	 "${MINGW_PACKAGE_PREFIX}-python"
	 "${MINGW_PACKAGE_PREFIX}-gettext"
	 "${MINGW_PACKAGE_PREFIX}-check")
makedepends=("${MINGW_PACKAGE_PREFIX}-autotools"
             "${MINGW_PACKAGE_PREFIX}-cc")
source=("./${_realname}-${pkgver}.tar.gz")
sha256sums=('b081702271a0de8a5d9688bee6b67885d75e7b47eeb6a00a2f3406a5a537c9e9')

build() {
  cd "${srcdir}/${_realname}-${pkgver}"
  mkdir -p "${srcdir}/build-${MSYSTEM}" && cd "${srcdir}/build-${MSYSTEM}"

  ## R is not packaged by msys2. To use it, you would leak the
  ## location of the R installation path.
  ##
  ## By default, R will try to install itself in C:\Program
  ## Files\R. This is a bad idea, because there is a space
  ## here. Install it directly to C:\R.
  ##
  ## R does not install the import library for R.dll, so we can create
  ## it. The easiest way to do that is copy bin/x64/R.dll to
  ## lib/libR.dll in the R install directory.

  ../"${_realname}-${pkgver}"/configure \
    --prefix="${MINGW_PREFIX}" \
    --build="${MINGW_CHOST}" \
    --host="${MINGW_CHOST}" \
    --target="${MINGW_CHOST}" \
    --enable-static \
    --enable-shared \
    --enable-relocatable \
    PATH="$PATH:/c/R/R-4.2.2/bin"

  make
}

check() {
  cd "${srcdir}/build-${MSYSTEM}"
  make print-tests-environment
  ## src/test-R.R segfaults inside Rcpp, I donâ€™t know why.
  make check 'XFAIL_TESTS = src/test-R.R'
}

package() {
  cd "${srcdir}/build-${MSYSTEM}"

  make install DESTDIR="${pkgdir}"
}
