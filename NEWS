#+title: What’s new in adftool

* Noteworthy changes in release ?.? (????-??-??) [?]
** The generator can be used in JavaScript
An embarrassing bug has been fixed, now src/js/adftool_file.mjs calls
adftool_file_open_generated correctly.

** File.lookup now works in JavaScript
An other embarrassing bug has been discovered and fixed, which would
call adftool_lookup with invalid parameters.

* Noteworthy changes in release 0.7.0 (2023-03-17) [alpha]
** New function to generate an EEG
adftool_file_open_generated can now generate a synthetic EEG.

* Noteworthy changes in release 0.6.0 (2023-03-09) [alpha]
** API cleaning
Undocumented and internal entry points are now marked as
deprecated. The compiler is informed about which destructor must be
called for allocation functions.

** Adftool has been reported to compile on macos
There might need to tweak a few options: at configure time, specify
the explicit HDF5_CFLAGS and HDF5_LIBS as homebrew does not install a
pkg-config file for HDF5, and explicitly set RCPP_CXXFLAGS, because
sed does not work as expected. The Rcpp test will not pass until
adftool is installed. The configure script cannot check whether Python
can be linked, because cpython does not provide an ABI.

** Bug fix: reading short strings from a dictionary now correctly NUL-terminates the result
Reading a short string would put a NUL character at position 12,
leaving bytes before that uninitialized. Now the NUL character is put
at the correct position.

* Noteworthy changes in release 0.5.3 (2023-03-03) [alpha]
** Fix the named node comparison and the literal comparison
The terms should be compared by their N3 encoding. Previously, '<0>'
would compare before '<%3E>', even if ASCII '0' is after ASII '%',
because only the unescaped form was compared. Similarly, the double
quote as a literal ('"\""') would compare before '"A"', even if ASCII
'\' is after ASCII 'A'.

** Adftool now compiles with clang

* Noteworthy changes in release 0.5.2 (2023-03-02) [alpha]
** R binding with Rcpp
It is now possible to use the adftool API within R, thanks to the new
Rcpp binding.

* Noteworthy changes in release 0.5.1 (2023-02-21) [alpha]
** Fix windows compilation
A couple of bugs have been fixed for windows, now the whole test suite
should pass.

* Noteworthy changes in release 0.5.0 (2023-02-17) [alpha]
** Add new API endpoints to lookup typed literal objects

** Bug fix: non-integer xsd:double or xsd:decimal literals can only be converted to integers if they are whole numbers
** Breaking bug fix: "hello"^^<type> should come BEFORE "world"@en
You need to regenerate your files, because the indices built with
adftool 0.4.3 will be broken by this new version.

* Noteworthy changes in release 0.4.3 (2023-01-21) [alpha]
** Add a missing import to src/js/adftool_file.mjs
It is now possible to set the raw EEG data from JavaScript.

* Noteworthy changes in release 0.4.2 (2023-01-16) [alpha]
** Fully specify the storage type for HDF5
The HDF5 types for 32-bit integers are now specified as big
endian. This applies for B+ trees and nextID attributes. The files
must be recreated, but the uint32_t arguments of the C API are still
meant as native endianness, so your code won’t change.

* Noteworthy changes in release 0.4.1 (2023-01-13) [alpha]
** Package fixes
The continuous integration is now able to build a debian package,
without a "-dirty" suffix to the version number.
** Emscripten build fix
The file open function now respects the initialization bytes.

* Noteworthy changes in release 0.4.0 (2023-01-12) [alpha]
** Libbplus has now merged with adftool
Libbplus is no longer a dependency.

* Noteworthy changes in release 0.3.0 (2023-01-12) [alpha]
** Now use libbplus
The code has been moved around so as to use libbplus. libbplus is
included in adftool.

#+language: en
#+author: Vivien Kraus
#+email: vivien.kraus@univ-reims.fr
# Local Variables:
# mode: org
# End:
